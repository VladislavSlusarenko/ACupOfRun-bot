import os
from telebot import TeleBot
from datetime import datetime, timedelta
from apscheduler.schedulers.background import BackgroundScheduler
from config import ADMINS
from config import bot 
from config import admin_panel 
VIDEO_FOLDER = "./videos"  # –ü—É—Ç—å –≤–Ω—É—Ç—Ä–∏ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
os.makedirs(VIDEO_FOLDER, exist_ok=True)

# –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ
os.makedirs(VIDEO_FOLDER, exist_ok=True)
# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
admin_state = {}

admin_panel.add_admin(922094773)
print(admin_panel.get_info())

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–ª—è –∑–∞–¥–∞—á
scheduler = BackgroundScheduler()

# –ö–æ–º–∞–Ω–¥–∞ /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
@bot.message_handler(commands=['admin'])
def admin_panel(message):
    user_id = message.from_user.id
    if user_id in ADMINS:
        bot.send_message(
            user_id, 
            "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞!\n"
            "–í–∏ –º–æ–∂–µ—Ç–µ:\n"
            "1Ô∏è‚É£ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤—ñ–¥–µ–æ –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó (–≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –¥–Ω—è: 1-7).\n"
            "2Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω—ñ –≤—ñ–¥–µ–æ.\n\n"
            "–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –¥–Ω—è, —â–æ–± –ø–æ—á–∞—Ç–∏! üé•"
        )
        bot.send_message(user_id, f"–ó–∞—Ä–∞–∑ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –≤—ñ–¥–µ–æ: {count_uploaded_videos()} –∑ 7.")
        admin_state[user_id] = {'awaiting_day': True, 'day': None}  # –°—Ç–∞–Ω –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ –¥–Ω—è
    else:
        bot.send_message(user_id, "–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è –≤—Ö–æ–¥—É –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
def count_uploaded_videos():
    return len([f for f in os.listdir(VIDEO_FOLDER) if f.endswith(".mp4")])

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–∏—è –¥–Ω—è
@bot.message_handler(func=lambda msg: msg.from_user.id in admin_state and admin_state[msg.from_user.id].get('awaiting_day'))
def set_day_for_video(message):
    user_id = message.from_user.id
    try:
        day = int(message.text)
        if 1 <= day <= 7:
            admin_state[user_id]['day'] = day
            admin_state[user_id]['awaiting_day'] = False
            admin_state[user_id]['awaiting_video'] = True
            bot.send_message(user_id, f"–ß–µ–∫–∞—é –≤—ñ–¥–µ–æ –¥–ª—è –¥–Ω—è #{day} üìπ")
        else:
            bot.send_message(user_id, "–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 7.")
    except ValueError:
        bot.send_message(user_id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä –¥–Ω—è (1-7).")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
@bot.message_handler(content_types=['video'])
def handle_video_upload(message):
    user_id = message.from_user.id
    if user_id in admin_state and admin_state[user_id].get('awaiting_video'):
        day = admin_state[user_id]['day']
        video_file_id = message.video.file_id
        video_file = bot.get_file(video_file_id)
        try:
            downloaded_file = bot.download_file(video_file.file_path)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∏–¥–µ–æ
            video_path = os.path.join(VIDEO_FOLDER, f"day_{day}.mp4")
            with open(video_path, 'wb') as f:
                f.write(downloaded_file)
            
            bot.send_message(user_id, f"–í—ñ–¥–µ–æ –¥–ª—è –¥–Ω—è #{day} —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ! ‚úÖ")
            schedule_video_post(day, video_path)
            admin_state.pop(user_id)  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        except Exception as e:
            bot.send_message(user_id, f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –≤—ñ–¥–µ–æ: {e}")
    else:
        bot.send_message(user_id, "–ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø–µ—Ä—à—É –≤–∏–±–µ—Ä—ñ—Ç—å –¥–µ–Ω—å —á–µ—Ä–µ–∑ /admin.")

# –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ
def schedule_video_post(day, video_path):
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ –Ω–∞—á–∞–ª–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —á–∞—Å–∞
    publish_time = datetime.now().replace(minute=0, second=0, microsecond=0) + timedelta(hours=1)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler.add_job(
        lambda: publish_video(video_path), 
        'date',  # –ò—Å–ø–æ–ª—å–∑—É–µ–º 'date' –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤ –æ–¥–Ω–æ –≤—Ä–µ–º—è
        run_date=publish_time,
        id=f"video_post_day_{day}"
    )
    bot.send_message(
        'CHANNEL_ID',  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª
        f"–í—ñ–¥–µ–æ –¥–ª—è –¥–Ω—è #{day} –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ –Ω–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—é –≤ {publish_time.strftime('%Y-%m-%d %H:%M')}! üöÄ"
    )
    print(f"–í—ñ–¥–µ–æ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ –Ω–∞ {publish_time.strftime('%Y-%m-%d %H:%M')}")

# –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤–∏–¥–µ–æ
def publish_video(video_path):
    if os.path.exists(video_path):
        with open(video_path, 'rb') as video_file:
            bot.send_video('CHANNEL_ID', video_file, caption="–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É! ‚òÄÔ∏è")
    else:
        bot.send_message('CHANNEL_ID', "–ü–æ–º–∏–ª–∫–∞: –≤—ñ–¥–µ–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó. üö®")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    scheduler.start()

