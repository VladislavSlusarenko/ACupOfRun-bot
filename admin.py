from apscheduler.schedulers.background import BackgroundScheduler
from apscheduler.triggers.cron import CronTrigger
import os
from telebot import types
from config import API_TOKEN, CHANNEL_ID, ADMIN_ID
print(API_TOKEN)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏–º–ø–æ—Ä—Ç–∞
print(CHANNEL_ID)
print(ADMIN_ID)
scheduler = BackgroundScheduler()

video_storage_path = "videos/"  # –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ
if not os.path.exists(video_storage_path):
    os.makedirs(video_storage_path)

video_schedule = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—è–∑–æ–∫ –≤–∏–¥–µ–æ –∫ –¥–Ω—è–º

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ "–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É!" –∏ –≤–∏–¥–µ–æ –≤ –∫–∞–Ω–∞–ª
def send_good_morning(bot, channel_id):
    current_day = get_current_day()
    if current_day in video_schedule:
        try:
            bot.send_video(channel_id, video=open(video_schedule[current_day], 'rb'))
        except Exception as e:
            bot.send_message(channel_id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {e}")
    bot.send_message(channel_id, "–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É!")

# –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
def send_reminder_1min(bot, user_data):
    for user_id in user_data:
        if user_data[user_id]['name'] and not user_data[user_id]['has_sent_photo']:
            bot.send_message(user_id, "–ß–µ–∫–∞—é –Ω–∞ —Ç–≤–æ—î —Ñ–æ—Ç–æ üòä")

def send_reminder_30min(bot, user_data):
    for user_id in user_data:
        if user_data[user_id]['name'] and not user_data[user_id]['has_sent_photo']:
            bot.send_message(user_id, "–ù–µ –∑–∞–±—É–¥—å üòè")

def send_reminder_50min(bot, user_data):
    for user_id in user_data:
        if user_data[user_id]['name'] and not user_data[user_id]['has_sent_photo']:
            bot.send_message(user_id, "–û—Å—Ç–∞–Ω–Ω—ñ–π —à–∞–Ω—Å üò¢")

# –°–±—Ä–æ—Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
def reset_reminders(user_data):
    for user_id in user_data:
        user_data[user_id]['has_sent_photo'] = False

# –ö–æ–º–∞–Ω–¥–∞ –∞–¥–º–∏–Ω–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
def handle_admin_commands(bot, message, channel_id):
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    for i in range(1, 8):
        markup.add(types.KeyboardButton(f"–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ –¥–ª—è –¥–Ω—è {i}"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–Ω—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ", reply_markup=markup)

    @bot.message_handler(content_types=['video'])
    def receive_video(video_message):
        try:
            day_number = int(video_message.text.split()[-1])  # –ü–∞—Ä—Å–∏–º –Ω–æ–º–µ—Ä –¥–Ω—è
        except ValueError:
            bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return
        
        file_path = os.path.join(video_storage_path, f"day_{day_number}.mp4")
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∏–¥–µ–æ –Ω–∞ —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
        file_info = bot.get_file(video_message.video.file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        try:
            with open(file_path, "wb") as f:
                f.write(downloaded_file)
            video_schedule[day_number] = file_path  # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
            bot.send_message(video_message.chat.id, f"–í–∏–¥–µ–æ –¥–ª—è –¥–Ω—è {day_number} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")
            bot.send_message(video_message.chat.id, f"–°–µ–π—á–∞—Å –≤—ã–≥—Ä—É–∂–µ–Ω–æ {len(video_schedule)} –≤–∏–¥–µ–æ –∏–∑ 7.")
        except Exception as e:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")

def get_current_day():
    from datetime import datetime
    return datetime.now().weekday() + 1
