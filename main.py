import telebot
from apscheduler.schedulers.background import BackgroundScheduler
from apscheduler.triggers.cron import CronTrigger
from datetime import datetime

API_TOKEN = '7338566190:AAGtOOMI8StYiU5HZ2vrkWY12QtIR6iL1n4'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
CHANNEL_ID = '-1002302094356'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞
bot = telebot.TeleBot(API_TOKEN)
scheduler = BackgroundScheduler()

user_data = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∏–º—è, —Å—á–µ—Ç—á–∏–∫ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)

def send_first_reminder(user_id):
    if not user_data[user_id]['has_sent_photo']:
        bot.send_message(user_id, "–ß–µ–∫–∞—é –Ω–∞ —Ç–≤–æ—î —Ñ–æ—Ç–æ üòä")

def send_second_reminder(user_id):
    if not user_data[user_id]['has_sent_photo']:
        bot.send_message(user_id, "–ù–µ –∑–∞–±—É–¥—å üòè")

def send_final_reminder(user_id):
    if not user_data[user_id]['has_sent_photo']:
        bot.send_message(user_id, "–û—Å—Ç–∞–Ω–Ω—ñ–π —à–∞–Ω—Å üò¢")

def reset_counter(user_id):
    name = user_data[user_id]['name']
    user_data[user_id]['counter'] = 0
    user_data[user_id]['has_sent_photo'] = False  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ
    bot.send_message(user_id, f"–ù—É —Ç–∏ —ñ –ø–æ–º—ñ–¥–æ—Ä–∫–∞, {name} üçÖ")

@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    if user_id not in user_data:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        user_data[user_id] = {'name': '', 'counter': 0, 'total_strikes': 0, 'has_sent_photo': False}  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.send_message(user_id, "–í–∞—à–µ —ñ–º‚Äô—è: üçÖ")
        print(f"–°—Ç–∞—Ä—Ç: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    else:
        print(f"–°—Ç–∞—Ä—Ç: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

@bot.message_handler(func=lambda message: message.from_user.id in user_data and user_data[message.from_user.id]['name'] == '')
def set_name(message):
    user_id = message.from_user.id
    user_data[user_id]['name'] = message.text  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏
    bot.send_message(user_id, f"–ü—Ä–∏–≤—ñ—Ç, {user_data[user_id]['name']}! –¢–µ–ø–µ—Ä —è –±—É–¥—É —á–µ–∫–∞—Ç–∏ –Ω–∞ —Ç–≤–æ—î —Ñ–æ—Ç–æ.")

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—Ä–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–∞–∂–¥—ã–π —á–∞—Å
    scheduler.add_job(send_first_reminder, CronTrigger(minute=1), args=[user_id], id=f"{user_id}_reminder_1")
    scheduler.add_job(send_second_reminder, CronTrigger(minute=30), args=[user_id], id=f"{user_id}_reminder_2")
    scheduler.add_job(send_final_reminder, CronTrigger(minute=50), args=[user_id], id=f"{user_id}_reminder_3")

@bot.message_handler(content_types=['photo'])
def receive_photo(message):
    user_id = message.from_user.id
    if user_id in user_data:
        user_data[user_id]['counter'] += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å—Ç—Ä–∞–π–∫–æ–≤
        user_data[user_id]['total_strikes'] += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±—â–∏–π —Å—á–µ—Ç —Å—Ç—Ä–∞–π–∫–æ–≤
        user_data[user_id]['has_sent_photo'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ —Ñ–æ—Ç–æ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ

        current_count = user_data[user_id]['counter']  # –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        total_strikes = user_data[user_id]['total_strikes']  # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–π–∫–æ–≤

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        bot.send_message(user_id, f"–°—É–ø–µ—Ä üëç –º–æ–ª–æ–¥–µ—Ü—å üòé! +1\n"
                                  f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—Ä–∞–π–∫—ñ–≤ –∑–∞—Ä–∞–∑: {current_count}\n"
                                  f"–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—Ä–∞–π–∫—ñ–≤: {total_strikes}")

        # –†–µ–ø–æ—Å—Ç —Ñ–æ—Ç–æ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª —Å –ø–æ–¥–ø–∏—Å—å—é –±–æ—Ç–∞
        bot.send_photo(CHANNEL_ID, message.photo[-1].file_id, caption="ACupOfRun_bot")
    else:
        bot.send_message(user_id, "–í–≤–µ–¥–∏ /start, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏.")

def send_morning_message():
    bot.send_message(CHANNEL_ID, "–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É!")

def send_daily_statistics():
    total_users = len(user_data)
    stats_message = f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–Ω—è:\n–ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ —É—á–∞—Å–Ω–∏–∫–∏: {total_users}\n"

    for user_id, data in user_data.items():
        name = data['name']
        strikes = data['counter']
        if strikes == 0:
            stats_message += f"{name} - –ø–æ–º—ñ–¥–æ—Ä–∫–∞ üçÖ\n"
        else:
            stats_message += f"{name} - —Å—Ç—Ä–∞–π–∫: {strikes}\n"

    bot.send_message(CHANNEL_ID, stats_message)

def check_and_reset_counters():
    for user_id, data in user_data.items():
        if data['counter'] == 0:
            reset_counter(user_id)  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ
        else:
            data['counter'] = 0  # –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —á–∞—Å–∞
            data['has_sent_photo'] = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ

# –ü–ª–∞–Ω–∏—Ä—É–µ–º –æ–±–Ω—É–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∫–∞–∂–¥—ã–π —á–∞—Å
scheduler.add_job(check_and_reset_counters, CronTrigger(hour='*'))

# –ü–ª–∞–Ω–∏—Ä—É–µ–º —É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª
scheduler.add_job(send_morning_message, CronTrigger(hour=7))  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ 7 —É—Ç—Ä–∞

# –ü–ª–∞–Ω–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –≤ –∫–æ–Ω—Ü–µ –¥–Ω—è
scheduler.add_job(send_daily_statistics, CronTrigger(hour=23, minute=59))  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ 23:59

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
scheduler.start()
bot.polling()
 