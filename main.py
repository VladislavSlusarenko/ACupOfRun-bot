import telebot
import json
from apscheduler.schedulers.background import BackgroundScheduler
from apscheduler.triggers.cron import CronTrigger
from config import ADMINS 
from admin import admin_panel
from admin import admin_session
from admin import types 
API_TOKEN = '7338566190:AAGtOOMI8StYiU5HZ2vrkWY12QtIR6iL1n4'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
CHANNEL_ID = '-1002302094356'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª

bot = telebot.TeleBot(API_TOKEN)
scheduler = BackgroundScheduler()

DATA_FILE = 'user_data.json'  # –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
user_data = {}
photo_buffer = {}  # –ë—É—Ñ–µ—Ä –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
def load_data():
    global user_data
    try:
        with open(DATA_FILE, 'r') as file: 
            user_data = json.load(file)
    except (FileNotFoundError, json.JSONDecodeError):
        user_data = {}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
def save_data():
    with open(DATA_FILE, 'w') as file:
        json.dump(user_data, file)

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
load_data()

@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    
    if user_id not in user_data:
        user_data[user_id] = {'name': '', 'counter': 0, 'has_sent_photo': False}
        bot.send_message(user_id, "–í–∞—à–µ —ñ–º‚Äô—è: üçÖ")  # –ü—Ä–æ—Å–∏–º–æ —ñ–º'—è
        save_data()
    else:
        if user_id in ADMINS:  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
            bot.send_message(user_id, f"–ü—Ä–∏–≤—ñ—Ç, {user_data[user_id]['name']}! –¢–∏ –≤ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ.")
            bot.loop.create_task(admin_panel(bot, user_id))  # –í–∏–∫–ª–∏–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
        else:
            bot.send_message(user_id, f"–ü—Ä–∏–≤—ñ—Ç, {user_data[user_id]['name']}! –¢–µ–ø–µ—Ä —è –±—É–¥—É —á–µ–∫–∞—Ç–∏ –Ω–∞ —Ç–≤–æ—î —Ñ–æ—Ç–æ.")
            
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: message.from_user.id in user_data and user_data[message.from_user.id]['name'] == '')
def set_name(message):
    user_id = message.from_user.id
    user_data[user_id]['name'] = message.text
    save_data()
    bot.send_message(user_id, f"–ü—Ä–∏–≤—ñ—Ç, {user_data[user_id]['name']}! –¢–µ–ø–µ—Ä —è –±—É–¥—É —á–µ–∫–∞—Ç–∏ –Ω–∞ —Ç–≤–æ—î —Ñ–æ—Ç–æ.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ "–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É!" –≤ –∫–∞–Ω–∞–ª
def send_good_morning():
    bot.send_message(CHANNEL_ID , "–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É!")

# –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
def send_reminder_1min():
    for user_id in user_data:
        if user_data[user_id]['name'] and not user_data[user_id]['has_sent_photo']:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ø—Ä–∞–≤–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ñ–æ—Ç–æ
            bot.send_message(user_id, "–ß–µ–∫–∞—é –Ω–∞ —Ç–≤–æ—î —Ñ–æ—Ç–æ üòä")

def send_reminder_30min():
    for user_id in user_data:
        if user_data[user_id]['name'] and not user_data[user_id]['has_sent_photo']:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ø—Ä–∞–≤–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ñ–æ—Ç–æ
            bot.send_message(user_id, "–ù–µ –∑–∞–±—É–¥—å üòè")

def send_reminder_50min():
    for user_id in user_data:
        if user_data[user_id]['name'] and not user_data[user_id]['has_sent_photo']:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ø—Ä–∞–≤–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ñ–æ—Ç–æ
            bot.send_message(user_id, "–û—Å—Ç–∞–Ω–Ω—ñ–π —à–∞–Ω—Å üò¢")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    user_id = message.from_user.id
    if user_id in user_data and user_data[user_id]['name']:
        user_data[user_id]['counter'] += 1
        user_data[user_id]['has_sent_photo'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ
        save_data()
        bot.send_message(user_id, f"–°—É–ø–µ—Ä üëç –º–æ–ª–æ–¥–µ—Ü—å üòé\n–°—Ç—Ä–∞–π–∫ {user_data[user_id]['counter']} –∑ 100")
        if user_id not in photo_buffer:
            photo_buffer[user_id] = []
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –±—É—Ñ–µ—Ä
        photo_buffer[user_id].append(message.photo[-1].file_id)
    else:
        bot.send_message(user_id, "–ù–∞–∂–º–∏—Ç–µ '/start' –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")

@bot.message_handler(func=lambda message: message.text == "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –±–æ—Ç–∞")
def back_to_bot(message):
    user_id = message.from_user.id
    if user_id in ADMINS:
        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –±–æ—Ç–∞
        admin_session[user_id] = 'user'
        
        # –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
        markup = types.ReplyKeyboardRemove()  # –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
        bot.send_message(user_id, "–¢–µ–ø–µ—Ä —Ç–∏ –≤ —Ä–µ–∂–∏–º—ñ –±–æ—Ç–∞. –ú–æ–∂–µ—à –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ —è–∫ –∑–≤–∏—á–∞–π–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á!", reply_markup=markup)
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∞–±–æ —ñ–Ω—à—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –±–æ—Ç–∞:
        send_reminder_1min()  # –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ 1 —Ö–≤–∏–ª–∏–Ω—É
        send_reminder_30min()  # –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ 30 —Ö–≤–∏–ª–∏–Ω
        send_reminder_50min()  # –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ 50 —Ö–≤–∏–ª–∏–Ω

# –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
scheduler.add_job(send_good_morning, CronTrigger(minute=0, hour='*'))  # –ö–∞–∂–¥—É—é –Ω–æ—á—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º "–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É!"

# –°—Ç–∞—Ä—Ç—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
scheduler.add_job(send_reminder_1min, CronTrigger(minute=1))   # 1-—è –º–∏–Ω—É—Ç–∞ –∫–∞–∂–¥–æ–≥–æ —á–∞—Å–∞
scheduler.add_job(send_reminder_30min, CronTrigger(minute=30)) # 30-—è –º–∏–Ω—É—Ç–∞ –∫–∞–∂–¥–æ–≥–æ —á–∞—Å–∞
scheduler.add_job(send_reminder_50min, CronTrigger(minute=50)) # 50-—è –º–∏–Ω—É—Ç–∞ –∫–∞–∂–¥–æ–≥–æ —á–∞—Å–∞

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
def reset_reminders():
    for user_id in user_data:
        user_data[user_id]['has_sent_photo'] = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–∞—á–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ
    save_data()      # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–±—Ä–æ—Å —Ñ–ª–∞–≥–æ–≤ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
scheduler.add_job(reset_reminders, CronTrigger(hour=0, minute=0))  # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00 —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å –ø–æ–¥–ø–∏—Å—è–º–∏ –≤ –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ —á–∞—Å–∞
def send_grouped_stats_and_photos_hourly():
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats_message = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å—Ç—Ä–∞–π–∫–æ–≤: \n"
    for user_id, data in user_data.items():
        name = data['name'] if data['name'] else "–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á"
        stats_message += f"{name} - —Å—Ç—Ä–∞–π–∫ {data['counter']} –∑ 100\n"
        if data['counter'] == 0:
            stats_message += f"{name} -  –ø–æ–º—ñ–¥–æ—Ä–∫–∞ üçÖ\n"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –∫–∞–Ω–∞–ª
    bot.send_message(CHANNEL_ID, stats_message)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
    for user_id, photos in photo_buffer.items():
        for photo in photos:
            user_name = user_data[user_id]['name'] if user_id in user_data else "–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á"
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –ø–æ–¥–ø–∏—Å—å—é
            photo_caption = f"–§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—è –≤—ñ–¥ {user_name} - —Å—Ç—Ä–∞–π–∫ {user_data[user_id]['counter']} –∑ 100"
            bot.send_photo(CHANNEL_ID, photo, caption=photo_caption)

    # –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    photo_buffer.clear()

# –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –¥–ª—è —Å–±—Ä–æ—Å–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞–∂–¥—ã–π —á–∞—Å
scheduler.add_job(send_grouped_stats_and_photos_hourly, CronTrigger(minute=59))  # –í 59-—é –º–∏–Ω—É—Ç—É –∫–∞–∂–¥–æ–≥–æ —á–∞—Å–∞

# –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
scheduler.start()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
